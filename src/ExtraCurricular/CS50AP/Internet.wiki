= Contents =
    - [[#The Internet|The Internet]]
        - [[#The Internet#Networks|Networks]]
            - [[#The Internet#Networks#Types of Network|Types of Network]]
        - [[#The Internet#Measurements of Internet|Measurements of Internet]]
    - [[#Protocols|Protocols]]
        - [[#Protocols#IP Protocol|IP Protocol]]
            - [[#Protocols#IP Protocol#IPv4|IPv4]]
            - [[#Protocols#IP Protocol#IPv6|IPv6]]
            - [[#Protocols#IP Protocol#IP Packets|IP Packets]]
        - [[#Protocols#Internet Routing Protocol|Internet Routing Protocol]]
        - [[#Protocols#UDP and TCP|UDP and TCP]]
            - [[#Protocols#UDP and TCP#UDP (User Datagram Protocol)|UDP (User Datagram Protocol)]]
            - [[#Protocols#UDP and TCP#TCP (Transmission Control Protocol)|TCP (Transmission Control Protocol)]]
    - [[#The World Wide Web|The World Wide Web]]
        - [[#The World Wide Web#DNS|DNS]]
            - [[#The World Wide Web#DNS#Anatomy of a Domain Name|Anatomy of a Domain Name]]
            - [[#The World Wide Web#DNS#DNS -> IP|DNS -> IP]]
        - [[#The World Wide Web#HTTP|HTTP]]
    - [[#Scalable Systems|Scalable Systems]]
        - [[#Scalable Systems#Load Testing|Load Testing]]
    - [[#Internet Protocol Suite|Internet Protocol Suite]]
    - [[#Open Protocol|Open Protocol]]
        - [[#Open Protocol#Importance of Being Open|Importance of Being Open]]

= The Internet =
The Internet is a *network* of connected _computing devices_.

== Networks ==
As simple as connecting two devices.

Device 1 ---- Device 2

=== Types of Network ===

- LAN = Covers *limited* area.
- WAN = Covers *large* area.
- DCN = Networks used in *Data Centers*


== Measurements of Internet ==
We have ways to measure speed and so forth

- *Bit rate* is the speed that _bits_ are sent each *second*. EG: 125 Megabytes Per Second
- *Bandwidth* is the MAXIMUM number of *Bit rate*.
- *Latency* is the *amount* of time that _bits_ takes to arrive. EG: 40 milliseconds


= Protocols =
To communicate with each other they need a language or a *_protocol_*.

The most import is the *IP* (Internet Protocol)

== IP Protocol ==
Utilize address -- two versions: IPv4 and IPv6

=== IPv4 ===
0-255.0-255.0-255.0-255

Has *FOUR* places and only has number of 0-255 (32 Bits)

=== IPv6 ===
Comprises of *8* places and uses hexadecimal values.

Example: *2001:0db8:0000:0042:0000:8a2e:0370:7334*

| Normal | Hexadecimal |
|--------|-------------|
| 1      | 1           |
| 2      | 2           |
| 3      | 3           |
| 4      | 4           |
| 5      | 5           |
| 6      | 6           |
| 7      | 7           |
| 8      | 8           |
| 9      | 9           |
| 10     | *A*         |
| 11     | *B*         |
| 12     | *C*         |
| 13     | *D*         |
| 14     | *E*         |
| 15     | *F*         |


=== IP Packets ===
Files must be transfered in small sizes -- *Packets*

Each packet contains a header that has information on how to route it
- IP address of *destination and source*
- ETC

{{https://cdn.kastatic.org/ka-perseus-images/337190cba133e19ee9d8b5878453f915971a59cd.svg}}

== Internet Routing Protocol ==
Protocols that computers use to split data and move them router to router until it reaches it's destination

1. Send Packet to *router*
2. Router looks at *destination IP* and sends it through the closest route (next router)
3. Forwards packet using *table*
4. _Message Reaches Destination_

Since there are many routes the Internet is very *redundant*

However IP doesn't take care if the packets go missing? Or corruption?

== UDP and TCP ==
These are higher level protocols that are used on top of IP to improve it.

=== UDP (User Datagram Protocol) ===
UDP provides a mechanism to detect corruption but *does not solve other problems*. This makes it *faster* than TCP but less *reliable.*

{{https://cdn.kastatic.org/ka-perseus-images/9d185d3d44c7ef1e2cd61655e47befb4d383e907.svg}}

This makes UDP *less used* but it does have some use cases such as: *_Facetime and other things_*

=== TCP (Transmission Control Protocol) ===
TCP is a more commonly used protocol so much that its normally called *TCP/IP*
The TCP header contains more *Fields* than the UDP ones.
{{https://cdn.kastatic.org/ka-perseus-images/e5fdf560fdb40a1c0b3c3ce96f570e5f00fff161.svg}}

Its a bit more complicated than UDP to send data first they need to establish a *3-Way Handshake*

1. Establish Connection 
	a) Device 1 sends *(SYN)* synchronize signal
	b) Device 2 sends *(ACK)* as to acknowledge data transmission
	c) Device 1 sends *(ACK)* then starts sending.

2. Send packets
	a) Send packet one
	b) *(ACK #1)*
	c) Repeat

3. Close connection
	a) Device 1 sends *(FIN)*
	b) Device 2 sends *(ACK)*
	c) Device 1 sends *(ACK)*

This makes the whole system very secure and we can see how it handles packets:

- Lost Packets
	- TCP can know if packets are lost if *Device 2* does not respond *(ACK)* within a timeout
{{https://cdn.kastatic.org/ka-perseus-images/b1017461d232cd46fa5b445f80e75568bf31c57c.svg}}

- Out of order packets
{{https://cdn.kastatic.org/ka-perseus-images/27f4fa1915c98689623e0ee224416c5290afc65a.svg}}
	- The receiver will let the sender know if the something is weird that the *(ACK)* does not match packets being sent
	- The receiver will resend the packets
	- And they the receiver can reassemble the packets using the *NUMBER #*




= The World Wide Web =
The World Wide Web is based on protocols. Some protocols are such:

DNS :: *Domain Name Service* is used to convert names to IP addresses for sending data.

HTTP :: _*Hyper Text Transfer Protocol*_ is used to actually transfer the data that we see in web pages.

TLS :: _*Transport Layer Security*_ is sometimes also used to transfer data over a *secure connection*

These protocols are used in addition on top of the *TCP/IP*

== DNS ==
DNS helps us to memorize names easier instead of typing in *73.12.125.11* we simply do *wikipedia.org*

=== Anatomy of a Domain Name ===
A domain name is made up of *3 levels.*


[_3rd level_._2nd Level_._*Top Level*_]


Top level domains are limited such as *_.com, .edu, .org_*

=== DNS -> IP ===
Behind the scenes Domain Names are mapped to *IP addresses.* A computer will go through these steps to find the IP of the domain.

1. Checks local cache, which is kept from websites you've recently visited.
2. Ask *ISP cache*, if your neighbor visited _google.com_ recently the ISP cache will have it.
3. Ask *ROOT Servers*.
	a) These servers keep record of which server keeps *records of which top level domain*
	{{https://cdn.kastatic.org/ka-perseus-images/b1d61ffbee75aaf2d02412b49e97d177fd7e5d73.svg|AnOTHER image|style='height:320px;'}}
	b) Then those *top level* servers will know the names of which those records are same.
	{{https://cdn.kastatic.org/ka-perseus-images/c1519163562cff6256ebff41bd4585fc8512ce56.svg|Another Image|style='height:320px;'}}
	c) Finally it filters for the one that matches the _3rd level domain_
	{{https://cdn.kastatic.org/ka-perseus-images/206f79ee6a96625d0bea1d730de2b601a3eb635c.svg|An Image|style='height:325px;'}}
4. The ISP responds with the IP.


== HTTP ==
After it has the IP address it then sends a *HTTP request* to the IP. Which likes this:

    > GET /index.html HTTP/1.1
    > Host: www.example.com

The server will send back a response which looks like this:

    > HTTP/1.1 200 OK
Numbers represent status code, which 200 means OK.



Then the browser renders the HTTP. This process also can be represented with TCP/IP.
{{https://cdn.kastatic.org/ka-perseus-images/620dfdaef4da77689540ae2155fd6e173605f4e3.svg|An Image|style='height:320px'}}

----

= Scalable Systems =
To be *scalable* means that you are able to withstand a spike or an increase of users.

In fact the Internet itself is scalable:
- Routers can be *dynamically added*
- Nothing stops you from _learning about it_

Apps are also scalable. Something people can do is *_Load Testing_*.

== Load Testing ==
By using the companies, own computer's they can use it to simulate a *_website under load._*




= Internet Protocol Suite =
{{https://cdn.kastatic.org/ka-perseus-images/6a0cd3a5b7e709c2f637c959ba98705ad21e4e3c.svg}}


Link Layer:: *Two computers* send data over signals

Network Layer:: *(More than two computers)*, they have to uniquely identify each device using *_IP_*.

Transport Layer:: Data has to be broken into packets and, *TCP and UDP* does that.

Application Layer:: HTTP and DNS helps us to see the websites. And if need be *TLS* transfer information securely.



= Open Protocol =
There is a need for standardization. Consider this:

{{https://cdn.kastatic.org/ka-perseus-images/d3755131b4baa6b4a6b7041440253ece3a4a43ef.svg}}

They don't follow the same protocol so they fail to communicate.

If they agree on one *standard* they can agree on what represents what. This will be what happens.

{{https://cdn.kastatic.org/ka-perseus-images/590c554a26ce6f3e1aedac9b20315690780e8941.svg}}

== Importance of Being Open ==
It's important because every computer can join without *proprietary technology.* 

Difference:
- *People can contribute*
- *Join without cost.*
- *You simply have to make sure your device complies by the standard.*

